# Account details. Required!
account:
  username:  # account email
  password:  # account password
  universe:  # name of the universe e.g. "Universe 1" or server number e.g. 1
  language:  # server language e.g. en
  country:   # server country e.g. GB; note that you can find server locale in the URL of the game lobby

# Listeners for notifications from Cruiser.
listeners:
  telegram:
    api_token: <API token>  # unique authentication token of the telegram bot; see https://core.telegram.org/bots/api
    chat_id: <chat id>      # id of the chat between you and the telegram bot
  discord:
    webhook_url:            # discord webhook url
  alert:
    wakeup_wav:             # path to .wav file which will be played on every wake-up
    error_wav:              # path to .wav file which will be played on every exception

# Cruiser settings
bot:
  listeners: []             # names of the listeners e.g. listeners: [telegram]
  expeditions: []           # user-defined ids of expeditions (see expeditions below) e.g. expeditions: [<expedition_id>]

  # If true, Cruiser will attempt to recall a saved fleet if there no longer is any danger.
  try_recalling_saved_fleet: false
  # However, if due to some delays the recalled fleet would fly back longer than `max_return_flight_time`,
  #  then it will not be returned.
  max_return_flight_time: 600  # (default = 10 minutes)

  # If true, Cruiser will harvest debris left by the user-defined expeditions.
  # Note that this option is only available if you're a discoverer.
  harvest_expedition_debris: true
  # Global speed of harvesting fleets.
  harvest_speed: 10  # (default = 100%)

  # After doing work, Cruiser will sleep between `sleep_min` and `sleep_max` seconds.
  sleep_min: 600  # (default = 10 minutes)
  sleep_max: 900  # (default = 15 minutes)

  # If a hostile fleet arrives before `max_time_before_attack_to_act` value,
  #  Cruiser will attempt to defend the planet. Otherwise defense will be scheduled between
  #  `min_time_before_attack_to_act` and `max_time_before_attack_to_act` before the attack.
  min_time_before_attack_to_act: 120  # (default = 2 minutes)
  max_time_before_attack_to_act: 180  # (default = 3 minutes)

  # Settings related to the communication with the OGame servers.
  request_timeout: 10                 # time to wait on a response from a server (default = 10 seconds)
  delay_between_requests: 0           # minimum delay between two subsequent requests (default = no delay)

# Expedition settings.
expeditions:
  <expedition_id>:                              # <expedition_id> is a user-defined id of the expedition
    origin: [<system>, <galaxy>, <position>]    # expedition origin e.g. [1, 1, 1]
    origin_type: <planet|moon>                  # (optional) origin type (default = planet)
    dest: [<system>, <galaxy>, <position>]      # (optional) expedition destination e.g. [1, 1, 16] (default = [<origin_galaxy>, <origin_system>, 16])
    ships:                                      # ships dictionary
      <ship_name>: <amount>                     # for <ship_name> see `ogame.game.const.Ship` e.g. small_cargo: 1
    speed: 10                                   # (optional) fleet speed (default = 100%)
    holding_time: 1                             # (optional) holding time (default = 1 hour)
    repeat: forever                             # (optional) how many times to repeat (default = forever)
    cargo:                                      # (optional) cargo dictionary
      <resource_name>: <amount>                 # for <resource_name> see `ogame.game.const.Resource` e.g. deuterium: 100. Note that it is advised to take a little bit of deuterium in case the returning expedition fleet will have to escape from an attack.